{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Office 365 Users",
    "description": "Office 365 Users Connection provider lets you access user profiles in your organization using your Office 365 account. You can perform various actions such as get your profile, a user\u0027s profile, a user\u0027s manager or direct reports and also update a user profile.",
    "x-ms-api-annotation": { "status": "Production" }
  },
  "host": "tip1-shared.azure-apim.net",
  "basePath": "/apim/office365users",
  "schemes": [ "https" ],
  "paths": {
    "/{connectionId}/users/me": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get my profile",
        "description": "Retrieves the profile for the current user",
        "operationId": "MyProfile",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "202": { "description": "Operation was successful" },
          "200": {
            "description": "Operation was successful",
            "schema": { "$ref": "#/definitions/User" }
          },
          "400": { "description": "BadRequest" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" },
          "default": { "description": "Operation Failed." }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/users/{userId}": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get user profile",
        "description": "Retrieves the profile for a specific user",
        "operationId": "UserProfile",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User principal name or email id",
            "required": true,
            "x-ms-summary": "User",
            "type": "string"
          }
        ],
        "responses": {
          "202": { "description": "Operation was successful" },
          "200": {
            "description": "Operation was successful",
            "schema": { "$ref": "#/definitions/User" }
          },
          "400": { "description": "BadRequest" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" },
          "default": { "description": "Operation Failed." }
        },
        "deprecated": false
      }
    },
    "/{connectionId}/users/photo": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get user photo metadata",
        "description": "Get user photo metadata",
        "operationId": "UserPhotoMetadata",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User principal name or email id",
            "required": true,
            "x-ms-summary": "User",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ClientPhotoMetadata" }
          },
          "default": { "description": "Operation Failed." }
        },
        "deprecated": false
      }
    },
    "/{connectionId}/users/photo/value": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get user photo",
        "description": "Get user photo",
        "operationId": "UserPhoto",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User principal name or email id",
            "required": true,
            "x-ms-summary": "User",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "binary",
              "type": "string",
              "x-ms-media-kind": "image",
              "x-ms-summary": "Image file content"
            }
          },
          "default": { "description": "Operation Failed." }
        },
        "deprecated": false
      }
    },
    "/{connectionId}/users/{userId}/manager": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get manager",
        "description": "Retrieves the profile of the specified user\u0027s manager",
        "operationId": "Manager",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User principal name or email id",
            "required": true,
            "x-ms-summary": "User",
            "type": "string"
          }
        ],
        "responses": {
          "202": { "description": "Operation was successful" },
          "200": {
            "description": "Operation was successful",
            "schema": { "$ref": "#/definitions/User" }
          },
          "400": { "description": "BadRequest" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" },
          "default": { "description": "Operation Failed." }
        },
        "deprecated": false,
        "x-ms-visibility": "important"
      }
    },
    "/{connectionId}/users/{userId}/directReports": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get direct reports",
        "description": "Retrieves the user profiles for the specified user\u0027s direct reports",
        "operationId": "DirectReports",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User principal name or email id",
            "required": true,
            "x-ms-summary": "User",
            "type": "string"
          }
        ],
        "responses": {
          "202": { "description": "Operation was successful" },
          "200": {
            "description": "Operation was successful",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/User" }
            }
          },
          "400": { "description": "BadRequest" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" },
          "default": { "description": "Operation Failed." }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced"
      }
    },
    "/{connectionId}/users": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Search for users",
        "description": "Retrieves the user profiles that match the search term",
        "operationId": "SearchUser",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Search string (applies to: display name, given name, surname, mail, mail nickname and user principal name)",
            "required": false,
            "x-ms-summary": "Search term",
            "type": "string"
          }
        ],
        "responses": {
          "202": { "description": "Operation was successful" },
          "200": {
            "description": "Operation was successful",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/User" }
            }
          },
          "400": { "description": "BadRequest" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" },
          "default": { "description": "Operation Failed." }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced"
      }
    },
    "/{connectionId}/testconnection": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Tests the connection",
        "description": "Tests the connection",
        "operationId": "TestConnection",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": { "description": "OK" },
          "default": { "description": "Operation Failed." }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "description": "Represents a User object in the directory",
      "required": [ "Id" ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "A unique identifier for the user object in the directory.",
          "type": "string",
          "x-ms-summary": "User id"
        },
        "AccountEnabled": {
          "description": "true if the account is enabled; otherwise, false. This property is required when a user is created.",
          "type": "boolean",
          "x-ms-summary": "Account enabled?"
        },
        "BusinessPhones": {
          "description": "A list of business phone numbers for the user",
          "type": "array",
          "items": { "type": "string" },
          "readOnly": true,
          "x-ms-summary": "Business phones"
        },
        "City": {
          "description": "The city in which the user is located.",
          "type": "string",
          "x-ms-summary": "City"
        },
        "CompanyName": {
          "description": "The name of the company in which the user works.",
          "type": "string",
          "x-ms-summary": "Company name"
        },
        "Country": {
          "description": "The country/region in which the user is located; for example, \"US\" or \"UK\".",
          "type": "string",
          "x-ms-summary": "Country"
        },
        "Department": {
          "description": "The name of the department in which the user works.",
          "type": "string",
          "x-ms-summary": "Department"
        },
        "DisplayName": {
          "description": "The name displayed in the address book for the user. This is usually the combination of the user\u0027s first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates.",
          "type": "string",
          "x-ms-summary": "Display name"
        },
        "GivenName": {
          "description": "The given name (first name) of the user.",
          "type": "string",
          "x-ms-summary": "Given name"
        },
        "JobTitle": {
          "description": "The user’s job title.",
          "type": "string",
          "x-ms-summary": "Job title"
        },
        "Mail": {
          "description": "The SMTP/email address for the user, for example, \"jeff@contoso.onmicrosoft.com\". Read-Only.",
          "type": "string",
          "x-ms-summary": "Email"
        },
        "MailNickname": {
          "description": "The mail alias for the user. This property must be specified when a user is created.",
          "type": "string",
          "x-ms-summary": "Nickname"
        },
        "mobilePhone": {
          "description": "The primary cellular telephone number for the user.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "OfficeLocation": {
          "description": "The office location in the user\u0027s place of business.",
          "type": "string",
          "x-ms-summary": "Office location"
        },
        "PostalCode": {
          "description": "The postal code for the user\u0027s postal address. The postal code is specific to the user\u0027s country/region. In the United States of America, this attribute contains the ZIP code.",
          "type": "string",
          "x-ms-summary": "Postal code"
        },
        "Surname": {
          "description": "The user\u0027s surname (family name or last name).",
          "type": "string",
          "x-ms-summary": "Surname"
        },
        "TelephoneNumber": {
          "description": "The primary cellular telephone number for the user.",
          "type": "string",
          "x-ms-summary": "Telephone number"
        },
        "UserPrincipalName": {
          "description": "The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user’s email name. The general format is alias@domain, where domain must be present in the tenant’s collection of verified domains.",
          "type": "string",
          "x-ms-summary": "User Principal Name (UPN)"
        }
      }
    },
    "ClientPhotoMetadata": {
      "description": "Photo Metadata class",
      "type": "object",
      "properties": {
        "HasPhoto": {
          "description": "Has photo",
          "type": "boolean",
          "x-ms-summary": "Has photo"
        },
        "Height": {
          "format": "int32",
          "description": "Height of photo",
          "type": "integer",
          "x-ms-summary": "Height"
        },
        "Width": {
          "format": "int32",
          "description": "Width of photo",
          "type": "integer",
          "x-ms-summary": "Width"
        },
        "ContentType": {
          "description": "Content Type of photo",
          "type": "string",
          "x-ms-summary": "ContentType"
        },
        "ImageFileExtension": {
          "description": "File extension for the photo (ex: \".jpg\")",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Image File Extension"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    }
  },
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "TestConnection",
      "parameters": {}
    }
  }
}
